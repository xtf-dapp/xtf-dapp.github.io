{"version":3,"sources":["components/alert/AlertComponent.tsx","components/navigation/NavigationComponent.tsx","components/about-us/AboutUsComponent.tsx","components/blog/BlogComponent.tsx","assests/dydx_exchange.png","components/trade/TradeComponent.tsx","components/home/HomeComponent.tsx","components/page-not-found/PageNotFoundComponent.tsx","components/profile/ProfileComponent.tsx","components/trade/dydx/DyDxOrderComponent.tsx","components/trade/dydx/DyDxComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["AlertComponent","props","style","position","top","right","zIndex","width","Alert","variant","show","onClose","setShowAlert","className","dismissible","Heading","title","body","navigation_static","name","href","current","NavigationBar","useState","defaultAccount","setDefaultAccount","showAlert","navigation","setNavigation","index","useEffect","pathName","window","location","pathname","console","log","replaceAll","currentNode","login","ethereum","request","method","then","result","arg","Navbar","collapseOnSelect","expand","bg","Container","Brand","Toggle","Collapse","id","Nav","map","item","Link","accounts","length","onClick","AboutUs","Blog","traders","description","Trade","Card","border","margin","Img","src","dydx_logo","Body","Title","Text","Button","find","Home","PageNotFound","Profile","userBalance","setUserBalance","errorMessage","setErrorMessage","accountChangedHandler","newAccount","account","params","balance","ethers","utils","formatEther","catch","error","message","DYDX_HOST","DyDxOrderComponent","setShow","orderSide","setOrderSide","setType","postOnly","setPostOnly","secondCurrency","setSecondCurrency","firstCurrency","setFirstCurrency","price","setPrice","connect","client","DydxClient","apiTimeout","networkId","web3","Web3","address","toChecksumAddress","onboarding","deriveStarkKey","SigningMethod","MetaMask","starKey","localStorage","getItem","JSON","parse","recoverDefaultApiCredentials","resFromGetAPIKeys","createUser","starkKey","publicKey","starkKeyYCoordinate","publicKeyYCoordinate","country","responseFromNewUser","apiKey","responseFromPreviousPromise","setItem","stringify","private_client","apiKeyCredentials","APIKey","starkPrivateKey","StarkKey","privateKey","private","createOrder","market","side","OrderSide","BUY","SELL","type","OrderType","LIMIT","timeInForce","TimeInForce","GTT","size","limitFee","expiration","createOrderResponse","Modal","onHide","Header","closeButton","Form","Group","controlId","Label","Select","onChange","tarEnv","target","value","selected","Row","Col","InputGroup","Control","step","parseFloat","split","Accordion","defaultActiveKey","Item","eventKey","Footer","DyDxComponent","markets","setMarkets","retrieveMarkets","public","getMarkets","response","local_markets","key","push","Table","striped","bordered","hover","baseAsset","volume24H","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5e30e797.chunk.js","sourcesContent":["import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nfunction AlertComponent(props: any) {\n    return (\n        <div style={{ position: \"absolute\", top: 10, right: 0, zIndex: 999, width: 500 }}>\n            <Alert\n                variant=\"danger\"\n                show={props.show}\n                onClose={() => props.setShowAlert(false)}\n                className=\"alert-slide-right\"\n                dismissible\n            >\n                <Alert.Heading>{props.title}</Alert.Heading>\n                <p>{props.body}</p>\n            </Alert>\n        </div>\n    );\n}\n\nexport default AlertComponent;","import React, { useState, useEffect } from 'react'\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport AlertComponent from '../alert/AlertComponent';\nimport './NavigationComponent.css'\n\nconst navigation_static = [\n  { name: 'Home', href: '/', current: false },\n  { name: 'About Us', href: '/#/about-us', current: false },\n  { name: 'Journey', href: '/#/journey', current: false },\n  { name: 'Blog', href: '/#/blog', current: false },\n]\n\nexport default function NavigationBar(props: any) {\n  const [defaultAccount, setDefaultAccount] = useState(null);\n  const [showAlert, setShowAlert] = useState({ show: false, title: \"\", body: \"\" });\n  const [navigation, setNavigation] = useState(navigation_static);\n\n  useEffect(() => {\n    const pathName = window.location.pathname;\n    console.log(pathName);\n    console.log(navigation);\n    if (pathName !== \"/\") {\n      for (const index in navigation_static) {\n        navigation_static[index].href = (pathName + navigation_static[index].href).replaceAll(\"//\", \"/\");\n      }\n      setNavigation(navigation_static);\n    }\n    console.log(pathName);\n    console.log(navigation);\n  });\n\n  for (const index in navigation) {\n    if (navigation[index].name === props.currentNode) {\n      navigation[index].current = true;\n    } else {\n      navigation[index].current = false;\n    }\n  }\n  const isLoggedIn = () => {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_accounts' }).then((accounts: any): void => {\n        if (accounts.length) {\n          console.log(`You're connected to: ${accounts[0]}`);\n          setDefaultAccount(accounts[0])\n        } else {\n          console.log(\"Metamask is not connected\");\n        }\n      })\n    }\n  }\n\n  const login = () => {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_requestAccounts' })\n        .then(function (result: any) {\n          setDefaultAccount(result[0]);\n        })\n    } else {\n      setShowAlert({ show: true, title: \"Error Message\", body: \"Install Metamask\" });\n    }\n  }\n\n  const getMenu = () => {\n    isLoggedIn()\n\n    if (defaultAccount) {\n      return (<Nav>\n        <Nav.Link href=\"/#/profile\">Profile</Nav.Link>\n      </Nav>)\n    } else {\n      return (<Nav>\n        <Nav.Link onClick={login}>Sign in</Nav.Link>\n      </Nav>)\n    }\n  }\n\n  const closeAlert = (arg: any) => {\n    console.log(\"something\")\n    setShowAlert({ show: false, title: \"\", body: \"\" })\n  }\n\n  return (\n    <div>\n      <AlertComponent show={showAlert.show} title={showAlert.title} body={showAlert.body} setShowAlert={closeAlert} />\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\" className=\"navbar-custom\">\n        <Container>\n          <Navbar.Brand href=\"#home\">XTF</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n\n              {navigation.map(item => (\n                <Nav.Link href={item.href} key={item.name}>{item.name}</Nav.Link>\n              ))}\n            </Nav>\n            {getMenu()}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  )\n}","import NavbarComponent from '../navigation/NavigationComponent'\n\nfunction AboutUs() {\n  return (\n    <div>\n      <NavbarComponent />\n      About US\n    </div>\n  );\n}\n\nexport default AboutUs;\n","import Navbar from \"../navigation/NavigationComponent\";\n\nfunction Blog() {\n    return (\n        <div>\n            <Navbar currentNode=\"Blog\"/>\n            <h1>Blog</h1>\n        </div>\n    );\n}\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/dydx_exchange.8f876a5b.png\";","import React, { useState, useEffect } from 'react'\nimport NavbarComponent from '../navigation/NavigationComponent'\nimport { Button, Card } from 'react-bootstrap';\nimport dydx_logo from '../../assests/dydx_exchange.png'\n\n\nconst traders = [\n    {\n        title: 'dydx Exchange', href: '/#/trade/dydx', description: `A powerful and professional exchange for trading perpetuals.\n    While trading on our platform, traders enjoy the security, privacy,\n    and decentralization benefits of Starkware zero-knowledge proofs.` }\n]\n\nfunction Trade(props: any) {\n\n    useEffect(() => {\n        const pathName = window.location.pathname;\n        if (pathName !== \"/\") {\n            for (const index in traders) {\n                traders[index].href = (pathName + traders[index].href).replaceAll(\"//\", \"/\");\n            }\n        }\n    });\n\n    return (\n        <div>\n            <Card border=\"info\" style={{ width: '18rem', margin: '20px' }}>\n                <Card.Img variant=\"top\" src={dydx_logo} />\n                <Card.Body>\n                    <Card.Title>dydx Exchange</Card.Title>\n                    <Card.Text>\n                        A powerful and professional exchange for trading perpetuals.\n                        While trading on our platform, traders enjoy the security, privacy,\n                        and decentralization benefits of Starkware zero-knowledge proofs.\n                    </Card.Text>\n                    <Button variant=\"primary\" href={traders.find(item => item.title == \"dydx Exchange\")?.href} >Trade</Button>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Trade;\n","import NavbarComponent from '../navigation/NavigationComponent'\nimport { Button, Card } from 'react-bootstrap';\nimport Trade from '../trade/TradeComponent';\nimport { useEffect } from 'react';\n\nfunction Home() {\n    return (\n        <div>\n            <NavbarComponent />\n            <Trade />\n        </div>\n    );\n}\n\nexport default Home;\n","import NavbarComponent from '../navigation/NavigationComponent'\n\nfunction PageNotFound() {\n  return (\n    <div>\n      <NavbarComponent />\n      Page Not Found\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import Navbar from \"../navigation/NavigationComponent\";\nimport React, { useState } from 'react'\nimport { ethers } from 'ethers'\nimport './ProfileComponent.css'\n\n/**\n * \n * Ref Links\n *  https://www.material-tailwind.com/docs/react/card\n */\n\nfunction Profile() {\n    const [defaultAccount, setDefaultAccount] = useState(\"\");\n    const [userBalance, setUserBalance] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    function getUserBalance(account: any) {\n        window.ethereum.request({ method: 'eth_getBalance', params: [account, 'latest'] })\n            .then(function (balance: any) {\n                    setUserBalance(ethers.utils.formatEther(balance));\n                })\n            .catch(function (error: any) {\n                    setErrorMessage(error.message);\n                });\n    }\n\n    const connectWalletHandler = () => {\n        if (window.ethereum) {\n            window.ethereum.request({ method: 'eth_requestAccounts' })\n                .then(function (result: any) {\n                        accountChangedHandler(result[0]);\n                    })\n        } else {\n            setErrorMessage(\"Install Metamask\");\n        }\n    }\n\n    const accountChangedHandler = function (newAccount: any) {\n        setDefaultAccount(newAccount);\n        getUserBalance(newAccount);\n    }\n\n    connectWalletHandler()\n    return (\n        <div>\n            <Navbar />\n            <div className=\"jumbotron\">\n                {errorMessage}\n                <h1 className=\"display-4\">Hello!</h1>\n                <p className=\"lead\">Here are the information we found about you from MetaMask</p>\n                <hr className=\"my-4\" />\n                <p>Account Address {defaultAccount} <br /> Balance {userBalance}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Modal, Form, Button, Row, Col, InputGroup, Accordion } from 'react-bootstrap';\nimport { DydxClient, SigningMethod, OrderSide, TimeInForce, OrderType, Market, ApiKeyCredentials } from '@dydxprotocol/v3-client';\nimport Web3 from 'web3'\n\n\nconst DYDX_HOST = 'https://api.stage.dydx.exchange';\n\nfunction DyDxOrderComponent(props: any) {\n    const [show, setShow] = useState(false);\n    const [orderSide, setOrderSide] = useState(\"BUY\");\n    const [type, setType] = useState(\"LIMIT\");\n    const [postOnly, setPostOnly] = useState(\"FALSE\");\n    const [secondCurrency, setSecondCurrency] = useState(0.0);\n    const [firstCurrency, setFirstCurrency] = useState(0.0);\n    const [price, setPrice] = useState(0.0);\n\n    const connect = async () => {\n        if (window.ethereum) {\n            window.ethereum.request({ method: 'eth_accounts' }).then((accounts: any): void => {\n                if (accounts.length) {\n                    var client: DydxClient = new DydxClient(\n                        DYDX_HOST,\n                        {\n                            apiTimeout: 3000,\n                            networkId: 5,\n                            web3: new Web3(window.ethereum),\n                        },\n                    );\n                    const address = Web3.utils.toChecksumAddress(accounts[0]);\n                    client.onboarding.deriveStarkKey(address, SigningMethod.MetaMask)\n                        .then(async (starKey) => {\n                            if (localStorage.getItem(address + \"_key\")) {\n                                return JSON.parse(localStorage.getItem(address + \"_key\") || \"\")\n                            }\n                            try {\n                                const resFromGetAPIKeys = await client.onboarding.recoverDefaultApiCredentials(address, SigningMethod.MetaMask);\n                                return { \"APIKey\": resFromGetAPIKeys, \"StarkKey\": starKey };\n                            } catch (errorFromApiKey) {\n                                const responseFromNewUser = await client.onboarding.createUser({\n                                    starkKey: starKey.publicKey,\n                                    starkKeyYCoordinate: starKey.publicKeyYCoordinate,\n                                    country: 'SG'\n                                }, address, null, SigningMethod.MetaMask);\n                                return { \"APIKey\": responseFromNewUser.apiKey, \"StarkKey\": starKey };\n                            }\n                        })\n                        .then(async (responseFromPreviousPromise: any) => {\n                            localStorage.setItem(address + \"_key\", JSON.stringify(responseFromPreviousPromise))\n                            const private_client = new DydxClient(\n                                DYDX_HOST,\n                                {\n                                    apiTimeout: 3000,\n                                    networkId: 5,\n                                    web3: new Web3(window.ethereum),\n                                    apiKeyCredentials: responseFromPreviousPromise.APIKey,\n                                    starkPrivateKey: responseFromPreviousPromise.StarkKey.privateKey,\n                                }\n                            );\n\n                            try {\n                                const createOrderResponse = await private_client.private.createOrder({\n                                    market: props.market,\n                                    side: orderSide === \"BUY\" ? OrderSide.BUY : OrderSide.SELL,\n                                    type: OrderType.LIMIT,\n                                    timeInForce: TimeInForce.GTT,\n                                    postOnly: postOnly === \"FALSE\" ? false : true,\n                                    size: '0.1',\n                                    price: '1',\n                                    limitFee: '0.015',\n                                    expiration: '2023-01-30T21:30:20.200Z'\n                                }, '1');\n                                console.log(\"Got Response from create order action\");\n                                console.log(createOrderResponse);\n                            } catch (errorFromCreateOrder) {\n                                console.log(errorFromCreateOrder);\n                            }\n                        });\n                }\n            })\n        }\n    }\n\n    return (\n        <>\n            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => setShow(true)}>\n                Transact\n            </button>\n\n            <Modal show={show} onHide={() => setShow(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.market}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Side</Form.Label>\n                        <Form.Select aria-label=\"Order Side\" onChange={(tarEnv) => setOrderSide(tarEnv.target.value)}>\n                            <option>Order Side</option>\n                            <option value=\"BUY\" selected>BUY</option>\n                            <option value=\"SELL\">SELL</option>\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Select aria-label=\"Type\" onChange={(tarEnv) => setType(tarEnv.target.value)}>\n                            <option>Type</option>\n                            <option value=\"MARKET\">MARKET</option>\n                            <option value=\"LIMIT\" selected>LIMIT</option>\n                            <option value=\"STOP_LIMIT\">STOP_LIMIT</option>\n                            <option value=\"TRAILING_STOP\">TRAILING_STOP</option>\n                            <option value=\"TAKE_PROFIT\">TAKE_PROFIT</option>\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Select aria-label=\"Post only\" onChange={(tarEnv) => setPostOnly(tarEnv.target.value)}>\n                            <option>Post Only</option>\n                            <option value=\"TRUE\">TRUE</option>\n                            <option value=\"FALSE\" selected>FALSE</option>\n                        </Form.Select>\n                        <Form.Text className=\"text-muted\">\n                            Whether the order should be canceled if it would fill immediately on reaching the matching-engine.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Amount</Form.Label>\n                        <Row>\n                            <Col>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control type=\"number\" name=\"price\" step=\".0001\" value={firstCurrency} onChange={(tarEnv) => setFirstCurrency(parseFloat(tarEnv.target.value))} />\n                                    <InputGroup.Text id=\"basic-addon1\">{props.market.split('-')[0]}</InputGroup.Text>\n                                </InputGroup>\n                            </Col>\n                            <Col>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control type=\"number\" name=\"price\" step=\".0001\" value={secondCurrency} onChange={(tarEnv) => setSecondCurrency(parseFloat(tarEnv.target.value))} />\n                                    <InputGroup.Text id=\"basic-addon1\">{props.market.split('-')[1]}</InputGroup.Text>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Price</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <Form.Control type=\"number\" name=\"price\" step=\".0001\" value={price} onChange={(tarEnv) => setPrice(parseFloat(tarEnv.target.value))} />\n                            <InputGroup.Text id=\"basic-addon1\">USD</InputGroup.Text>\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Worst accepted price of the base asset in USD.\n                        </Form.Text>\n                    </Form.Group>\n                    <Accordion defaultActiveKey=\"0\">\n                        <Accordion.Item eventKey=\"0\">\n                            <Accordion.Header>Advance</Accordion.Header>\n                            <Accordion.Body>\n                                Good Till Time will be by default set to 1 Day\n                            </Accordion.Body>\n                        </Accordion.Item>\n                    </Accordion>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => connect()}>Save changes</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default DyDxOrderComponent;","import NavbarComponent from '../../navigation/NavigationComponent'\nimport Table from 'react-bootstrap/Table';\nimport React, { useState, useEffect } from 'react';\nimport { DydxClient } from '@dydxprotocol/v3-client';\nimport DyDxOrderComponent from './DyDxOrderComponent';\n\nconst DYDX_HOST = 'https://api.stage.dydx.exchange';\n\nfunction DyDxComponent() {\n    const [markets, setMarkets] = useState([])\n\n    const retrieveMarkets = async () => {\n        const client: DydxClient = new DydxClient(\n            DYDX_HOST,\n            {\n                apiTimeout: 3000,\n                starkPrivateKey: '01234abcd...',\n            },\n        );\n        if (markets.length <= 0) {\n            client.public.getMarkets().then((response) => {\n                console.log(response);\n                const local_markets: any = [];\n                for (var key in response.markets) {\n                    local_markets.push(response.markets[key]);\n                }\n                setMarkets(local_markets)\n            })\n        }\n    }\n\n    useEffect(() => {\n        retrieveMarkets()\n    });\n\n    return (\n        <div>\n            <NavbarComponent />\n            <h4>Markets</h4>\n            {markets.length > 0 ?\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Market</th>\n                            <th>Base Asset</th>\n                            <th>type</th>\n                            <th>volume24H</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {markets.map((item: any) => (\n                            <tr key={item.id}>\n                                <td>{item.market}</td>\n                                <td>{item.baseAsset}</td>\n                                <td>{item.type}</td>\n                                <td>{item.volume24H}</td>\n                                <td><DyDxOrderComponent market={item.market} /></td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table> : \"Loading...\"}\n        </div>\n    );\n}\n\nexport default DyDxComponent;\n","import {\n  HashRouter as Router,\n  Routes, //replaces \"Switch\" used till v5\n  Route,\n} from \"react-router-dom\";\n\nimport AboutUs from \"./components/about-us/AboutUsComponent\";\nimport Blog from \"./components/blog/BlogComponent\";\nimport Home from \"./components/home/HomeComponent\";\nimport PageNotFound from \"./components/page-not-found/PageNotFoundComponent\";\nimport Profile from \"./components/profile/ProfileComponent\";\nimport DyDxComponent from \"./components/trade/dydx/DyDxComponent\";\nimport Trade from \"./components/trade/TradeComponent\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about-us\" element={<AboutUs />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/blog\" element={<Blog />} />\n          <Route path=\"/trade\" element={<Trade />} />\n          <Route path=\"/trade/dydx\" element={<DyDxComponent />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}