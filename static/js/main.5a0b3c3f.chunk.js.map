{"version":3,"sources":["components/navigation/NavigationComponent.tsx","components/about-us/AboutUsComponent.tsx","components/blog/BlogComponent.tsx","assests/dydx_exchange.png","assests/gmx_exchange.png","components/trade/TradeComponent.tsx","components/home/HomeComponent.tsx","components/page-not-found/PageNotFoundComponent.tsx","components/profile/ProfileComponent.tsx","components/trade/dydx/DyDxOrderComponent.tsx","components/trade/dydx/DyDxComponent.tsx","components/footer/FooterComponent.tsx","components/trade/dydx/DyDxCandleChartComponent.tsx","components/trade/dydx/DyDxChartComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["navigation","name","href","current","NavigationBar","props","useState","defaultAccount","setDefaultAccount","useEffect","index","currentNode","login","window","ethereum","request","method","then","result","Store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","Navbar","collapseOnSelect","expand","bg","variant","className","Container","Brand","Toggle","Collapse","id","Nav","map","item","Link","accounts","length","console","log","onClick","AboutUs","Blog","traders","description","Trade","Card","border","style","width","margin","Img","src","dydx_logo","Body","Title","Text","Button","find","gmx_logo","Home","PageNotFound","Profile","userBalance","setUserBalance","errorMessage","setErrorMessage","accountChangedHandler","newAccount","account","params","balance","ethers","utils","formatEther","catch","error","DYDX_HOST","DyDxOrderComponent","show","setShow","orderSide","setOrderSide","setType","postOnly","setPostOnly","secondCurrency","setSecondCurrency","firstCurrency","setFirstCurrency","price","setPrice","checkBoxChecked","setCheckBoxChecked","isLoading","setIsLoading","connect","alert","client","DydxClient","apiTimeout","networkId","web3","Web3","address","toChecksumAddress","onboarding","deriveStarkKey","SigningMethod","MetaMask","starKey","createUser","starkKey","publicKey","starkKeyYCoordinate","publicKeyYCoordinate","country","responseFromNewUser","apiKey","recoverDefaultApiCredentials","resFromGetAPIKeys","responseFromPreviousPromise","private_client","apiKeyCredentials","APIKey","starkPrivateKey","StarkKey","privateKey","private","getAccount","accountResponse","equity","Promise","resolve","setTimeout","requestTestnetTokens","testNetTokens","transfer","creditAsset","creditAmount","reqObj","market","side","OrderSide","BUY","SELL","OrderType","LIMIT","timeInForce","TimeInForce","GTT","size","toString","limitFee","expiration","addOneDay","JSON","stringify","createOrder","positionId","createOrderResponse","order","err","str","parse","substring","indexOf","errors","msg","newDate","Date","setDate","getDate","toISOString","body","Modal","onHide","Header","closeButton","Form","Group","controlId","Label","Select","onChange","tarEnv","target","value","selected","Row","Col","InputGroup","Control","step","parseFloat","split","disabled","Accordion","defaultActiveKey","Item","eventKey","Check","label","checked","Footer","DyDxComponent","markets","setMarkets","retrieveMarkets","public_client","public","getMarkets","response","local_markets","key","push","Table","striped","bordered","hover","baseAsset","volume24H","backgroundColor","color","padding","textAlign","getFullYear","DyDxCandleChartComponent","data","colors","lineColor","textColor","areaTopColor","areaBottomColor","chartContainerRef","useRef","handleResize","chart","applyOptions","clientWidth","createChart","layout","background","ColorType","Solid","height","timeScale","fitContent","addCandlestickSeries","setData","addEventListener","removeEventListener","remove","ref","resolutions","CandleResolution","ONE_MIN","FIFTEEN_MINS","THIRTY_MINS","ONE_HOUR","FOUR_HOURS","ONE_DAY","DyDxChartComponent","Market","ETH_USD","setMarket","resolution","setResolution","load_data_in_time","new_markets","marketsResponse","getCandles","candles","sort","a","b","updatedAt","getTime","updatedData","forEach","ob","time","open","Number","high","low","close","updateMarket","updateResolution","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5a0b3c3f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Navbar, Nav, Container } from 'react-bootstrap';\nimport './NavigationComponent.css'\nimport { Store } from 'react-notifications-component';\n\nconst navigation = [\n  { name: 'Home', href: '/xtf-web-app/', current: false },\n  { name: 'About Us', href: '/xtf-web-app/#/about-us', current: false },\n  { name: 'Journey', href: '/xtf-web-app/#/journey', current: false },\n  { name: 'Blog', href: '/xtf-web-app/#/blog', current: false },\n  { name: 'Chart', href: '/xtf-web-app/#/trade/dydx/chart', current: false },\n]\n\nexport default function NavigationBar(props: any) {\n  const [defaultAccount, setDefaultAccount] = useState(null);\n\n  useEffect(() => {\n\n    if (navigation) {\n      for (const index in navigation) {\n        if (navigation[index].name === props.currentNode) {\n          navigation[index].current = true;\n        } else {\n          navigation[index].current = false;\n        }\n      }\n    }\n\n  });\n\n\n  const isLoggedIn = () => {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_accounts' }).then((accounts: any): void => {\n        if (accounts.length) {\n          console.log(`You're connected to: ${accounts[0]}`);\n          setDefaultAccount(accounts[0])\n        } else {\n          console.log(\"Metamask is not connected\");\n        }\n      })\n    }\n  }\n\n  const login = () => {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_requestAccounts' })\n        .then(function (result: any) {\n          setDefaultAccount(result[0]);\n        })\n    } else {\n      Store.addNotification({\n        title: \"Wallet Not Found!\",\n        message: \"Install Metamask or any wallet\",\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true\n        }\n      });\n    }\n  }\n\n  const getMenu = () => {\n    isLoggedIn()\n\n    if (defaultAccount) {\n      return (<Nav>\n        <Nav.Link href=\"/xtf-web-app/#/profile\">Profile</Nav.Link>\n      </Nav>)\n    } else {\n      return (<Nav>\n        <Nav.Link onClick={login}>Sign in</Nav.Link>\n      </Nav>)\n    }\n  }\n\n\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\" className=\"navbar-custom\">\n        <Container>\n          <Navbar.Brand href=\"/xtf-web-app/\">XTF</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n\n              {navigation.map(item => (\n                <Nav.Link href={item.href} key={item.name}>{item.name}</Nav.Link>\n              ))}\n            </Nav>\n            {getMenu()}\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  )\n}","import NavbarComponent from '../navigation/NavigationComponent'\n\nfunction AboutUs() {\n  return (\n    <div>\n      <NavbarComponent />\n      About US\n    </div>\n  );\n}\n\nexport default AboutUs;\n","import Navbar from \"../navigation/NavigationComponent\";\n\nfunction Blog() {\n    return (\n        <div>\n            <Navbar currentNode=\"Blog\"/>\n            <h1>Blog</h1>\n        </div>\n    );\n}\n\nexport default Blog;\n","export default __webpack_public_path__ + \"static/media/dydx_exchange.8f876a5b.png\";","export default __webpack_public_path__ + \"static/media/gmx_exchange.9da320d8.png\";","import React, { useState, useEffect } from 'react'\nimport NavbarComponent from '../navigation/NavigationComponent'\nimport { Button, Card } from 'react-bootstrap';\nimport dydx_logo from '../../assests/dydx_exchange.png'\nimport gmx_logo from '../../assests/gmx_exchange.png'\n\n\nconst traders = [\n    {\n        title: 'dydx Exchange', href: '/xtf-web-app/#/trade/dydx', \n        description: `A powerful and professional exchange for trading perpetuals.\n    While trading on our platform, traders enjoy the security, privacy,\n    and decentralization benefits of Starkware zero-knowledge proofs.` },\n    {\n        title: 'GMX Exchange', href: '/xtf-web-app/#/trade/gmx', \n        description: `GMX.io is a decentralized exchange (DEX) built on the Ethereum blockchain as a decentralized application (dApp).\n        GMX.io provides liquidity pools, allowing users to earn rewards by staking their tokens. Overall, GMX.io aims to provide a decentralized, efficient, and user-friendly platform for cryptocurrency trading.`\n    }\n]\n\nfunction Trade(props: any) {\n\n    return (\n        <div>\n            <Card border=\"info\" style={{ width: '18rem', margin: '20px' }}>\n                <Card.Img variant=\"top\" src={dydx_logo} />\n                <Card.Body>\n                    <Card.Title>dydx Exchange</Card.Title>\n                    <Card.Text>\n                        A powerful and professional exchange for trading perpetuals.\n                        While trading on our platform, traders enjoy the security, privacy,\n                        and decentralization benefits of Starkware zero-knowledge proofs.\n                    </Card.Text>\n                    <Button variant=\"primary\" href={traders.find(item => item.title == \"dydx Exchange\")?.href} >Trade</Button>\n                </Card.Body>\n            </Card>\n            <Card border=\"info\" style={{ width: '18rem', margin: '20px' }}>\n                <Card.Img variant=\"top\" src={gmx_logo} />\n                <Card.Body>\n                    <Card.Title>GMX Exchange</Card.Title>\n                    <Card.Text>\n                        GMX.io is a decentralized exchange (DEX) built on the Ethereum blockchain as a decentralized application (dApp).\n                        GMX.io provides liquidity pools, allowing users to earn rewards by staking their tokens. Overall, GMX.io aims to provide a decentralized, efficient, and user-friendly platform for cryptocurrency trading.\n                    </Card.Text>\n                    <Button variant=\"primary\" href={traders.find(item => item.title == \"GMX Exchange\")?.href} >Trade</Button>\n                </Card.Body>\n            </Card>\n        </div>\n    );\n}\n\nexport default Trade;\n","import NavbarComponent from '../navigation/NavigationComponent'\nimport { Button, Card } from 'react-bootstrap';\nimport Trade from '../trade/TradeComponent';\nimport { useEffect } from 'react';\n\nfunction Home() {\n    return (\n        <div>\n            <NavbarComponent />\n            <Trade />\n        </div>\n    );\n}\n\nexport default Home;\n","import NavbarComponent from '../navigation/NavigationComponent'\n\nfunction PageNotFound() {\n  return (\n    <div>\n      <NavbarComponent />\n      Page Not Found\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import Navbar from \"../navigation/NavigationComponent\";\nimport React, { useState } from 'react'\nimport { ethers } from 'ethers'\nimport './ProfileComponent.css'\n\n/**\n * \n * Ref Links\n *  https://www.material-tailwind.com/docs/react/card\n */\n\nfunction Profile() {\n    const [defaultAccount, setDefaultAccount] = useState(\"\");\n    const [userBalance, setUserBalance] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    function getUserBalance(account: any) {\n        window.ethereum.request({ method: 'eth_getBalance', params: [account, 'latest'] })\n            .then(function (balance: any) {\n                    setUserBalance(ethers.utils.formatEther(balance));\n                })\n            .catch(function (error: any) {\n                    setErrorMessage(error.message);\n                });\n    }\n\n    const connectWalletHandler = () => {\n        if (window.ethereum) {\n            window.ethereum.request({ method: 'eth_requestAccounts' })\n                .then(function (result: any) {\n                        accountChangedHandler(result[0]);\n                    })\n        } else {\n            setErrorMessage(\"Install Metamask\");\n        }\n    }\n\n    const accountChangedHandler = function (newAccount: any) {\n        setDefaultAccount(newAccount);\n        getUserBalance(newAccount);\n    }\n\n    connectWalletHandler()\n    return (\n        <div>\n            <Navbar currentNode=\"Profile\" />\n            <div className=\"jumbotron\">\n                {errorMessage}\n                <h1 className=\"display-4\">Hello!</h1>\n                <p className=\"lead\">Here are the information we found about you from MetaMask</p>\n                <hr className=\"my-4\" />\n                <p>Account Address {defaultAccount} <br /> Balance {userBalance}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Modal, Form, Button, Row, Col, InputGroup, Accordion } from 'react-bootstrap';\nimport { DydxClient, SigningMethod, OrderSide, TimeInForce, OrderType, Market, ApiKeyCredentials } from '@dydxprotocol/v3-client';\nimport Web3 from 'web3'\nimport { AxiosError } from 'axios';\nimport { NOTIFICATION_TYPE, Store } from 'react-notifications-component';\n\n\nconst DYDX_HOST = 'https://api.stage.dydx.exchange';\nconst DYDX_NETWORK_ID = 5;\n\nfunction DyDxOrderComponent(props: any) {\n    const [show, setShow] = useState(false);\n    const [orderSide, setOrderSide] = useState(\"BUY\");\n    const [type, setType] = useState(\"LIMIT\");\n    const [postOnly, setPostOnly] = useState(\"FALSE\");\n    const [secondCurrency, setSecondCurrency] = useState(0.0);\n    const [firstCurrency, setFirstCurrency] = useState(0.01);\n    const [price, setPrice] = useState(1000);\n    const [checkBoxChecked, setCheckBoxChecked] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const connect = async () => {\n\n        if (!checkBoxChecked) {\n            alert('danger', \"Checkbox Unchecked\", \"In order to proceed, please agree to the transaction signing by the assumed wallet\")\n            return;\n        }\n        if (window.ethereum) {\n            console.log(window.ethereum)\n            setIsLoading(true)\n            window.ethereum.request({ method: 'eth_accounts' }).then((accounts: any): void => {\n                if (accounts.length) {\n                    var client: DydxClient = new DydxClient(\n                        DYDX_HOST,\n                        {\n                            apiTimeout: 3000,\n                            networkId: DYDX_NETWORK_ID,\n                            web3: new Web3(window.ethereum),\n                        },\n                    );\n                    const address = Web3.utils.toChecksumAddress(accounts[0]);\n                    client.onboarding.deriveStarkKey(address, SigningMethod.MetaMask)\n                        .then(async (starKey) => {\n                            console.log(\"retrieving of starKey was successful\")\n                            try {\n                                const responseFromNewUser = await client.onboarding.createUser({\n                                    starkKey: starKey.publicKey,\n                                    starkKeyYCoordinate: starKey.publicKeyYCoordinate,\n                                    country: 'SG'\n                                }, address, null, SigningMethod.MetaMask);\n                                console.log(\"Creation of New user was successful\")\n                                return { \"APIKey\": responseFromNewUser.apiKey, \"StarkKey\": starKey };\n                            } catch (errorFromApiKey) {\n                                console.log(\"Creation of new user was unsuccessful\")\n                                const resFromGetAPIKeys = await client.onboarding.recoverDefaultApiCredentials(address, SigningMethod.MetaMask);\n                                return { \"APIKey\": resFromGetAPIKeys, \"StarkKey\": starKey };\n                            }\n                        })\n                        .then(async (responseFromPreviousPromise: any) => {\n                            // localStorage.setItem(address + \"_key\", JSON.stringify(responseFromPreviousPromise))\n                            const private_client = new DydxClient(\n                                DYDX_HOST,\n                                {\n                                    apiTimeout: 3000,\n                                    networkId: DYDX_NETWORK_ID,\n                                    web3: new Web3(window.ethereum),\n                                    apiKeyCredentials: responseFromPreviousPromise.APIKey,\n                                    starkPrivateKey: responseFromPreviousPromise.StarkKey.privateKey,\n                                }\n                            );\n\n                            try {\n                                const accountResponse = await private_client.private.getAccount(address);\n                                console.log(\"response from get Accountts\", accountResponse)\n                                const equity = +accountResponse.account.equity\n                                if (equity <= 0) {\n                                    alert('warning', \"Account Selected has no funds\", 'Using Token API from DYDX to debit some test funds')\n                                    await new Promise(resolve => setTimeout(resolve, 3000)); // 3 sec\n                                    const testNetTokens = await private_client.private.requestTestnetTokens();\n                                    alert('danger', \"Test Funds Added\", `Amount with ${testNetTokens.transfer.creditAsset}:${testNetTokens.transfer.creditAmount}`)\n                                }\n                                var reqObj = {\n                                    market: props.market,\n                                    side: orderSide === \"BUY\" ? OrderSide.BUY : OrderSide.SELL,\n                                    type: OrderType.LIMIT,\n                                    timeInForce: TimeInForce.GTT,\n                                    postOnly: postOnly === \"FALSE\" ? false : true,\n                                    size: firstCurrency.toString(),\n                                    price: price.toString(),\n                                    limitFee: '0.015',\n                                    expiration: addOneDay()\n                                };\n                                console.log(\"Request sent for create order \", JSON.stringify(reqObj))\n                                const createOrderResponse = await private_client.private.createOrder(\n                                    reqObj,\n                                    accountResponse.account.positionId);\n                                console.log(\"Got Response from create order action\", createOrderResponse);\n                                alert('success', \"Order Created\", `Order Created with id ${createOrderResponse.order.id}`)\n                                setShow(false)\n                            } catch (errorFromCreateOrder: any) {\n                                console.log(errorFromCreateOrder)\n                                const err = errorFromCreateOrder as AxiosError\n                                const str = JSON.parse(err.message.substring(err.message.indexOf(\"-\") + 1))\n                                alert('danger', \"Create Order Failed\", str.errors[0].msg)\n                                setShow(false)\n                            }\n\n                            setIsLoading(false)\n                        }).catch((err) => {\n                            console.log(err);\n                            setIsLoading(false);\n                        });\n                } else {\n                    setIsLoading(false)\n                }\n            }).catch((err: any) => { console.log(err); setIsLoading(false); })\n        } else {\n            Store.addNotification({\n                title: \"Wallet Not Found!\",\n                message: \"Install Metamask or any wallet\",\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n                animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n                dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                }\n            });\n        }\n    }\n\n\n    const addOneDay = () => {\n        const newDate = new Date();\n        newDate.setDate(newDate.getDate() + 1);\n        return newDate.toISOString();\n    }\n\n    const alert = (variant: NOTIFICATION_TYPE, title: string, body: string) => {\n        Store.addNotification({\n            title: title,\n            message: body,\n            type: variant,\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n                duration: 5000,\n                onScreen: true\n            }\n        });\n    }\n\n    return (\n        <>\n            <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => setShow(true)}>\n                Transact\n            </button>\n            <Modal show={show} onHide={() => setShow(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.market}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Side</Form.Label>\n                        <Form.Select aria-label=\"Order Side\" onChange={(tarEnv) => setOrderSide(tarEnv.target.value)}>\n                            <option>Order Side</option>\n                            <option value=\"BUY\" selected>BUY</option>\n                            <option value=\"SELL\">SELL</option>\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Select aria-label=\"Type\" onChange={(tarEnv) => setType(tarEnv.target.value)}>\n                            <option>Type</option>\n                            <option value=\"MARKET\">MARKET</option>\n                            <option value=\"LIMIT\" selected>LIMIT</option>\n                            <option value=\"STOP_LIMIT\">STOP_LIMIT</option>\n                            <option value=\"TRAILING_STOP\">TRAILING_STOP</option>\n                            <option value=\"TAKE_PROFIT\">TAKE_PROFIT</option>\n                        </Form.Select>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                        <Form.Label>Type</Form.Label>\n                        <Form.Select aria-label=\"Post only\" onChange={(tarEnv) => setPostOnly(tarEnv.target.value)}>\n                            <option>Post Only</option>\n                            <option value=\"TRUE\">TRUE</option>\n                            <option value=\"FALSE\" selected>FALSE</option>\n                        </Form.Select>\n                        <Form.Text className=\"text-muted\">\n                            Whether the order should be canceled if it would fill immediately on reaching the matching-engine.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Amount</Form.Label>\n                        <Row>\n                            <Col>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control type=\"number\" name=\"price\" step=\".01\" value={firstCurrency} onChange={(tarEnv) => setFirstCurrency(parseFloat(tarEnv.target.value))} />\n                                    <InputGroup.Text id=\"basic-addon1\">{props.market.split('-')[0]}</InputGroup.Text>\n                                </InputGroup>\n                            </Col>\n                            <Col>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control type=\"number\" name=\"price\" step=\".0001\" value={secondCurrency} onChange={(tarEnv) => setSecondCurrency(parseFloat(tarEnv.target.value))} disabled />\n                                    <InputGroup.Text id=\"basic-addon1\">{props.market.split('-')[1]}</InputGroup.Text>\n                                </InputGroup>\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Price</Form.Label>\n                        <InputGroup className=\"mb-3\">\n                            <Form.Control type=\"number\" name=\"price\" step=\".0001\" value={price} onChange={(tarEnv) => setPrice(parseFloat(tarEnv.target.value))} />\n                            <InputGroup.Text id=\"basic-addon1\">USD</InputGroup.Text>\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Worst accepted price of the base asset in USD.\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Advance Options</Form.Label>\n                        <Accordion defaultActiveKey=\"-1\">\n                            <Accordion.Item eventKey=\"0\">\n                                <Accordion.Header>Good Till Time</Accordion.Header>\n                                <Accordion.Body>\n                                    Good Till Time will be by default set to 1 Day\n                                </Accordion.Body>\n                            </Accordion.Item>\n                            <Accordion.Item eventKey=\"1\">\n                                <Accordion.Header>Limit Fee</Accordion.Header>\n                                <Accordion.Body>\n                                    Set default to 0.015\n                                </Accordion.Body>\n                            </Accordion.Item>\n                        </Accordion>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"MetaMask or Wallet selected may ask for max 2 signing of transaction\" value={checkBoxChecked + \"\"} onChange={(tarEnv) => setCheckBoxChecked(tarEnv.target.checked)} />\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)} disabled={isLoading}>Close</Button>\n                    <Button variant=\"primary\" onClick={() => connect()} disabled={isLoading}>Trade</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n\nexport default DyDxOrderComponent;","import NavbarComponent from '../../navigation/NavigationComponent'\nimport Table from 'react-bootstrap/Table';\nimport React, { useState, useEffect } from 'react';\nimport { DydxClient } from '@dydxprotocol/v3-client';\nimport DyDxOrderComponent from './DyDxOrderComponent';\n\nconst DYDX_HOST = 'https://api.stage.dydx.exchange';\n\nfunction DyDxComponent() {\n    const [markets, setMarkets] = useState([])\n\n    const retrieveMarkets = async () => {\n        const public_client: DydxClient = new DydxClient(\n            DYDX_HOST,\n            {\n                apiTimeout: 3000,\n                starkPrivateKey: '01234abcd...',\n            },\n        );\n        if (markets.length <= 0) {\n            public_client.public.getMarkets().then((response) => {\n                console.log(response);\n                const local_markets: any = [];\n                for (var key in response.markets) {\n                    local_markets.push(response.markets[key]);\n                }\n                setMarkets(local_markets)\n            })\n        }\n    }\n\n    useEffect(() => {\n        retrieveMarkets()\n    });\n\n    return (\n        <div>\n            <NavbarComponent />\n            {markets.length > 0 ?\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Market</th>\n                            <th>Base Asset</th>\n                            <th>type</th>\n                            <th>volume24H</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {markets.map((item: any) => (\n                            <tr key={item.id}>\n                                <td>{item.market}</td>\n                                <td>{item.baseAsset}</td>\n                                <td>{item.type}</td>\n                                <td>{item.volume24H}</td>\n                                <td><DyDxOrderComponent market={item.market} /></td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table> : \"Loading...\"}\n        </div>\n    );\n}\n\nexport default DyDxComponent;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer style={{ backgroundColor: \"#0e6ffd\", color: \"white\" }}>\n      <div style={{ padding: \"20px\", textAlign: \"center\" }}>\n        <p>Copyright © {new Date().getFullYear()} XTF Platform</p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { createChart, ColorType } from 'lightweight-charts';\nimport React, { useEffect, useRef } from 'react';\n\nfunction DyDxCandleChartComponent(props: any) {\n\n    const {\n        data,\n        colors: {\n            backgroundColor = 'white',\n            lineColor = '#2962FF',\n            textColor = 'black',\n            areaTopColor = '#2962FF',\n            areaBottomColor = 'rgba(41, 98, 255, 0.28)',\n        } = {},\n    } = props;\n\n    const chartContainerRef: any = useRef();\n\n    useEffect(\n        () => {\n            console.log(\"Inside of DyDxCandleChartComponent\")\n            const handleResize = () => {\n                chart.applyOptions({ width: chartContainerRef.current.clientWidth });\n            };\n\n            const chart = createChart(chartContainerRef.current, {\n                layout: {\n                    background: { type: ColorType.Solid, color: backgroundColor },\n                    textColor,\n                },\n                width: chartContainerRef.current.clientWidth,\n                height: 300,\n            });\n            chart.timeScale().fitContent();\n\n            const newSeries = chart.addCandlestickSeries();\n            newSeries.setData(data);\n\n            window.addEventListener('resize', handleResize);\n            return () => {\n                window.removeEventListener('resize', handleResize);\n\n                chart.remove();\n            };\n        },\n        [data, backgroundColor, lineColor, textColor, areaTopColor, areaBottomColor]\n    );\n\n\n\n    return (\n        <>\n            <div\n                ref={chartContainerRef}\n            />\n        </>\n    );\n};\n\n\n\nexport default DyDxCandleChartComponent;\n","import { CandleResolution, DydxClient, Market } from \"@dydxprotocol/v3-client\";\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"../../navigation/NavigationComponent\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport DyDxCandleChartComponent from \"./DyDxCandleChartComponent\";\nimport { createChart, ColorType, OhlcData } from 'lightweight-charts';\n\nconst DYDX_HOST = 'https://api.stage.dydx.exchange';\n\nconst resolutions: string[] = [CandleResolution.ONE_MIN, CandleResolution.FIFTEEN_MINS, CandleResolution.THIRTY_MINS, CandleResolution.ONE_HOUR, CandleResolution.FOUR_HOURS, CandleResolution.ONE_DAY]\n\nfunction DyDxChartComponent(props: any) {\n    const [market, setMarket] = useState<any>(Market.ETH_USD)\n    const [resolution, setResolution] = useState<any>(CandleResolution.ONE_DAY)\n    const [data, setData] = useState<any>([])\n    const [isLoading, setIsLoading] = useState(false)\n    const [markets, setMarkets] = useState<any>([])\n\n    const public_client = new DydxClient(DYDX_HOST);\n\n    useEffect(\n        () => {\n            console.log(\"In DyDxChartComponent\")\n            load_data_in_time()\n            const new_markets: any = []\n            public_client.public.getMarkets().then((marketsResponse) => {\n                for (var key in marketsResponse.markets) {\n                    new_markets.push(marketsResponse.markets[key].market);\n                }\n                setMarkets(new_markets)\n            });\n        }, []);\n\n    const updateMarket = (tarEnv: any) => {\n        setMarket(tarEnv.target.value)\n        load_data_in_time()\n    }\n\n    const updateResolution = (tarEnv: any) => {\n        setResolution(tarEnv.target.value)\n        load_data_in_time()\n    }\n\n    const convertDate = (date: string) => {\n        const dateObject = new Date(date);\n        const year = dateObject.getFullYear();\n        const month = (dateObject.getMonth() + 1).toString().padStart(2, '0');\n        const day = dateObject.getDate().toString().padStart(2, '0');\n        const formattedDate = `${year}-${month}-${day}`;\n        return formattedDate;\n    }\n\n    const load_data_in_time = () => {\n        setIsLoading(true)\n        \n\n        public_client.public.getCandles({\n            market: market,\n            resolution: resolution,\n        }).then((response) => {\n            const candles = response.candles;\n\n            candles.sort((a, b) => new Date(a.updatedAt).getTime() - new Date(b.updatedAt).getTime())\n\n            const updatedData: OhlcData[] = [];\n\n            candles.forEach((item) => {\n                console.log(item)\n                const ob = { time: new Date(item.updatedAt).getTime() /1000, open: Number(item.open), high: Number(item.high), low: Number(item.low), close: Number(item.close) } as OhlcData;\n                console.log(ob)\n                updatedData.push(ob);\n            })\n            setData(updatedData);\n            setIsLoading(false)\n        }).catch((error: any) => {\n            console.log(\"error when getting candle data \", error);\n            setIsLoading(false)\n        })\n    }\n\n    return (\n        <>\n            <Navbar currentNode=\"Chart\" />\n            <Form>\n                <Row>\n                    <Col>\n                        <Form.Label>Market</Form.Label>\n                        <Form.Select value={market} onChange={(tarEnv) => updateMarket(tarEnv)} disabled={isLoading}>\n                            {markets.map((item: any) => (<option value={item}>{item}</option>))}\n                        </Form.Select>\n                    </Col>\n                    <Col>\n                        <Form.Label>Duration</Form.Label>\n                        <Form.Select value={resolution} onChange={(tarEnv) => updateResolution(tarEnv)} disabled={isLoading}>\n                            {resolutions.map(item => (<option value={item}>{item}</option>))}\n                        </Form.Select>\n                    </Col>\n                </Row>\n            </Form>\n            <br />\n            <br />\n            <DyDxCandleChartComponent data={data} />\n        </>\n    );\n};\n\n\n\nexport default DyDxChartComponent;\n","import {\n  HashRouter as Router,\n  Routes, //replaces \"Switch\" used till v5\n  Route,\n} from \"react-router-dom\";\n\nimport { ReactNotifications } from 'react-notifications-component'\nimport AboutUs from \"./components/about-us/AboutUsComponent\";\nimport Blog from \"./components/blog/BlogComponent\";\nimport Home from \"./components/home/HomeComponent\";\nimport PageNotFound from \"./components/page-not-found/PageNotFoundComponent\";\nimport Profile from \"./components/profile/ProfileComponent\";\nimport DyDxComponent from \"./components/trade/dydx/DyDxComponent\";\nimport Trade from \"./components/trade/TradeComponent\";\n\nimport 'react-notifications-component/dist/theme.css'\nimport Footer from \"./components/footer/FooterComponent\";\nimport DyDxChartComponent from \"./components/trade/dydx/DyDxChartComponent\";\n\n\nfunction App() {\n  return (\n    <div>\n      <ReactNotifications />\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about-us\" element={<AboutUs />} />\n          <Route path=\"/profile\" element={<Profile />} />\n          <Route path=\"/blog\" element={<Blog />} />\n          <Route path=\"/trade\" element={<Trade />} />\n          <Route path=\"/trade/dydx\" element={<DyDxComponent />} />\n          <Route path=\"/trade/dydx/chart\" element={<DyDxChartComponent />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </Router>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}